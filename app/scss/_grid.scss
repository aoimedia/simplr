/* Grid
--------------------------------- */

.cf {}
.cf:before,
.cf:after {
  content: " ";
  display: table
}
.cf:after { clear: both; }

.container {
  margin: 0 auto;
  padding: $container-pad;
  width: 100%; 
  max-width: $container-max-width; 
  text-align: center;
  background-color: white;
  @extend .cf;
}

.wrap {
  margin: 0 auto;
  width: 100%;
  max-width: $wrap-max-width; 
  min-width: $wrap-min-width; 
  text-align: left;
  @extend .cf;
}

.wrap--single { 
  @extend .wrap;
  max-width: 800px;
  padding: $baseline 0;
}

/* ----------- (slightly modified) joshnh grid */
/* http://joshnh.com/weblog/creating-lightweight-grid-system/ */

.grid {
  width: 100%;
  @extend .cf;
}

[class*="grid__col--"] {
  vertical-align: top;
  border-collapse: collapse !important;
}

.content {
  padding: $baseline 0;
}

@media (min-width: $min-width) {

  [class*="grid__col--"] {
    display: inline-block;
  }

  @each $column in $columns {
    .grid__col--#{$column} {
      width: $column * 1%;
    }
  }

  // I added this for 3-colum splits:
  .grid__col--333 {
    width: 33.333333333%;
  }

  .content {
    padding: $baseline;
  }

  /* 
  Remove left padding from the first .column module, 
  and right padding from the last .column module,
  so our content stays flush with the .wrap module.
  */
  [class*="grid__col--"] {

    .grid &:first-of-type > .content {
      padding-left: 0;
    }
    .grid &:last-of-type > .content {
      padding-right: 0;
    }
  }

}//@media

/* Access the internal grids
[class*="grid__col--"] > .content {
  //background-color: hsla(0,0%,0%,.1);
}
[class*="grid__col--"] > [class*="grid__col--"] > .content {
  //background-color: hsla(0,0%,0%,.2);
}
[class*="grid__col--"] > [class*="grid__col--"] > [class*="grid__col--"] > .content {
  //background-color: hsla(0,0%,0%,.3);
}
[class*="grid__col--"] > [class*="grid__col--"] > [class*="grid__col--"] > [class*="grid__col--"] > .content {
  //background-color: hsla(0,0%,0%,.4);
}
*/
